{"ast":null,"code":"const Demo = () => {\n  const redux = require(\"redux\");\n  const createStore = redux.createStore;\n  const BUY_CAKE = \"BUY_CAKE\";\n  function buyCake() {\n    //action\n    return {\n      type: BUY_CAKE,\n      info: \"first redux action\"\n    };\n  }\n  //state\n  const initialState = {\n    numOfCakes: 10\n  };\n  // //reducer function\n  const reducer = function () {\n    let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n    let action = arguments.length > 1 ? arguments[1] : undefined;\n    switch (action.type) {\n      case BUY_CAKE:\n        return {\n          // ...state,                     //copy of state object using spread operator so that we can change required property of state,\n          numOfCakes: state.numOfCakes - 1 //in this example we are asking reducer make copy of state and update the numOfCakes property of the state and other property will remain unchanged\n        };\n\n      default:\n        return state;\n    }\n  };\n  const store = console.log(\"initial state\", store === null || store === void 0 ? void 0 : store.getState());\n  const unsubscribe = store.subscribe(() => console.log('update state', store === null || store === void 0 ? void 0 : store.getState()));\n  store.dispatch(buyCake());\n  store.dispatch(buyCake());\n  store.dispatch(buyCake());\n  store.dispatch(buyCake());\n  // unsubscribe()\n};\n_c = Demo;\nexport default Demo;\nvar _c;\n$RefreshReg$(_c, \"Demo\");","map":{"version":3,"names":["Demo","redux","require","createStore","BUY_CAKE","buyCake","type","info","initialState","numOfCakes","reducer","state","arguments","length","undefined","action","store","console","log","getState","unsubscribe","subscribe","dispatch","_c","$RefreshReg$"],"sources":["/home/innobit/Desktop/redux-demo/src/redux/demo.js"],"sourcesContent":["const Demo = () => {\n  const redux = require(\"redux\");\n  const createStore = redux.createStore;\n  const BUY_CAKE = \"BUY_CAKE\";\n  function buyCake() {\n    //action\n    return {\n      type: BUY_CAKE,\n      info: \"first redux action\",\n    };\n  }\n  //state\n  const initialState = {\n    numOfCakes: 10,\n  };\n  // //reducer function\n  const reducer = (state = initialState, action) => {\n    switch (action.type) {\n      case BUY_CAKE:\n        return {\n          // ...state,                     //copy of state object using spread operator so that we can change required property of state,\n          numOfCakes: state.numOfCakes - 1, //in this example we are asking reducer make copy of state and update the numOfCakes property of the state and other property will remain unchanged\n        };\n      default:\n        return state;\n    }\n  };\n  const store = \n  console.log(\"initial state\",store?.getState())\n  const unsubscribe=store.subscribe(()=>console.log('update state',store?.getState()))\n  store.dispatch(buyCake());\n  store.dispatch(buyCake());\n  store.dispatch(buyCake());\n  store.dispatch(buyCake());\n  // unsubscribe()\n};\nexport default Demo;\n\n\n"],"mappings":"AAAA,MAAMA,IAAI,GAAGA,CAAA,KAAM;EACjB,MAAMC,KAAK,GAAGC,OAAO,CAAC,OAAO,CAAC;EAC9B,MAAMC,WAAW,GAAGF,KAAK,CAACE,WAAW;EACrC,MAAMC,QAAQ,GAAG,UAAU;EAC3B,SAASC,OAAOA,CAAA,EAAG;IACjB;IACA,OAAO;MACLC,IAAI,EAAEF,QAAQ;MACdG,IAAI,EAAE;IACR,CAAC;EACH;EACA;EACA,MAAMC,YAAY,GAAG;IACnBC,UAAU,EAAE;EACd,CAAC;EACD;EACA,MAAMC,OAAO,GAAG,SAAAA,CAAA,EAAkC;IAAA,IAAjCC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGJ,YAAY;IAAA,IAAEO,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;IAC3C,QAAQC,MAAM,CAACT,IAAI;MACjB,KAAKF,QAAQ;QACX,OAAO;UACL;UACAK,UAAU,EAAEE,KAAK,CAACF,UAAU,GAAG,CAAC,CAAE;QACpC,CAAC;;MACH;QACE,OAAOE,KAAK;IAChB;EACF,CAAC;EACD,MAAMK,KAAK,GACXC,OAAO,CAACC,GAAG,CAAC,eAAe,EAACF,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEG,QAAQ,CAAC,CAAC,CAAC;EAC9C,MAAMC,WAAW,GAACJ,KAAK,CAACK,SAAS,CAAC,MAAIJ,OAAO,CAACC,GAAG,CAAC,cAAc,EAACF,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEG,QAAQ,CAAC,CAAC,CAAC,CAAC;EACpFH,KAAK,CAACM,QAAQ,CAACjB,OAAO,CAAC,CAAC,CAAC;EACzBW,KAAK,CAACM,QAAQ,CAACjB,OAAO,CAAC,CAAC,CAAC;EACzBW,KAAK,CAACM,QAAQ,CAACjB,OAAO,CAAC,CAAC,CAAC;EACzBW,KAAK,CAACM,QAAQ,CAACjB,OAAO,CAAC,CAAC,CAAC;EACzB;AACF,CAAC;AAACkB,EAAA,GAnCIvB,IAAI;AAoCV,eAAeA,IAAI;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}