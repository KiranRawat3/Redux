{"ast":null,"code":"import logger from \"redux-logger\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { applyMiddleware } from \"redux\";\nimport rootReducer from \"./rootReducer\";\nimport { reducer } from \"../others/asyncAction\";\n//import thunk from \"redux-thunk\";\nconst createStore = redux.createStore;\nconst applymiddleware = redux.applyMiddleware;\nconst thunkMiddleware = require(\"redux-thunk\").default;\nconst store = createStore(reducer, applymiddleware(thunkMiddleware));\n// store.subscribe(() => {\n// if(store.getState().isTrue){\n//   setUser({isTrue:true})\n// }})\nexport default store;\n\n//const store=createStore(rootReducer,composeWithDevTools(applyMiddleware(logger)))","map":{"version":3,"names":["logger","composeWithDevTools","applyMiddleware","rootReducer","reducer","createStore","redux","applymiddleware","thunkMiddleware","require","default","store"],"sources":["/home/innobit/Desktop/redux-demo/src/redux/store.js"],"sourcesContent":["\nimport logger from \"redux-logger\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { applyMiddleware } from \"redux\";\nimport rootReducer from \"./rootReducer\";\nimport { reducer } from \"../others/asyncAction\";\n//import thunk from \"redux-thunk\";\nconst createStore = redux.createStore;\nconst applymiddleware = redux.applyMiddleware;\nconst thunkMiddleware = require(\"redux-thunk\").default;\nconst store = createStore(reducer,applymiddleware(thunkMiddleware));\n// store.subscribe(() => {\n// if(store.getState().isTrue){\n//   setUser({isTrue:true})\n// }})\nexport default store;\n\n//const store=createStore(rootReducer,composeWithDevTools(applyMiddleware(logger)))"],"mappings":"AACA,OAAOA,MAAM,MAAM,cAAc;AACjC,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,eAAe,QAAQ,OAAO;AACvC,OAAOC,WAAW,MAAM,eAAe;AACvC,SAASC,OAAO,QAAQ,uBAAuB;AAC/C;AACA,MAAMC,WAAW,GAAGC,KAAK,CAACD,WAAW;AACrC,MAAME,eAAe,GAAGD,KAAK,CAACJ,eAAe;AAC7C,MAAMM,eAAe,GAAGC,OAAO,CAAC,aAAa,CAAC,CAACC,OAAO;AACtD,MAAMC,KAAK,GAAGN,WAAW,CAACD,OAAO,EAACG,eAAe,CAACC,eAAe,CAAC,CAAC;AACnE;AACA;AACA;AACA;AACA,eAAeG,KAAK;;AAEpB"},"metadata":{},"sourceType":"module","externalDependencies":[]}